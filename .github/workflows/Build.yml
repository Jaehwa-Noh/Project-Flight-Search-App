# This is a basic workflow to help you get started with Actions

name: Build Demo

run-name: ${{ github.actor }} is learning GitHub Actions

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build_apk"
  # build_apk:
  #   # The type of runner that the job will run on
  #   runs-on: ubuntu-latest
  #   # Steps represent a sequence of tasks that will be executed as part of the job
  #   steps:
  #     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Gradle Wrapper Validation
  #       uses: gradle/actions/wrapper-validation@v3.3.2
          
  #     - name: SetUp Java
  #       uses: actions/setup-java@v4
  #       with:
  #         distribution: temurin
  #         java-version: 17

  #     - name: Setup Gradle
  #       uses: gradle/actions/setup-gradle@v3

  #     - name: Make gradlew executable
  #       working-directory: ./Compose-Flight-Search-App
  #       run: chmod +x ./gradlew

  #     - name: Check spotless
  #       working-directory: ./Compose-Flight-Search-App
  #       run: ./gradlew spotlessApply

  #     - name: Run unit test
  #       working-directory: ./Compose-Flight-Search-App
  #       run: ./gradlew test

  #     - name: Build
  #       working-directory: ./Compose-Flight-Search-App
  #       run: ./gradlew assemble


  #     - uses: actions/upload-artifact@v4
  #       with:
  #         name: apk_output
  #         path: "**/build/outputs/apk/**/*.apk"


  android_test:
      # The type of runner that the job will run on
      runs-on: ubuntu-latest
      # Steps represent a sequence of tasks that will be executed as part of the job
      steps:
        - name: Enable KVM group perms
          run: |
            echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
            sudo udevadm control --reload-rules
            sudo udevadm trigger --name-match=kvm
      
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - name: Checkout
          uses: actions/checkout@v4
  
        - name: Gradle Wrapper Validation
          uses: gradle/actions/wrapper-validation@v3.3.2
            
        - name: SetUp Java
          uses: actions/setup-java@v4
          with:
            distribution: temurin
            java-version: 17
  
        - name: Setup Gradle
          uses: gradle/actions/setup-gradle@v3
  
        - name: Make gradlew executable
          working-directory: ./Compose-Flight-Search-App
          run: chmod +x ./gradlew

        - name: Build projects and run instrumentation tests
          uses: reactivecircus/android-emulator-runner@v2
          with:
            api-level: 30
            arch: x86_64
            disable-animations: true
            disk-size: 6000M
            heap-size: 600M
            script: ./gradlew connectedDemoDebugAndroidTest --daemon
        
        # - name: Run instrumentation test
        #   uses: ReactiveCircus/android-emulator-runner@v2.30.1
        #   with:
        #     working-directory: ./Compose-Flight-Search-App
        #     api-level: 33
        #     script: ./gradlew connectedAndroidTest
      
